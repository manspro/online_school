"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const git_utils_1 = require("../../utils/git.utils");
const file_system_utils_1 = require("../../utils/file-system.utils");
const path = require("path");
const logger_service_1 = require("../../logger/logger.service");
const color_service_1 = require("../../logger/color.service");
class GitRepository {
    constructor(_remote, _destination) {
        this._remote = _remote;
        this._destination = _destination;
        this.logger = logger_service_1.LoggerService.getLogger();
    }
    clone() {
        this.logger.debug(`${color_service_1.ColorService.blue('clone')} ${this._remote} git repository to ${this._destination}...`);
        return git_utils_1.GitUtils.clone(this._remote, this._destination)
            .then(() => this.logger.debug(`${color_service_1.ColorService.blue('clone')} success`))
            .then(() => this.logger.debug(`${color_service_1.ColorService.blue('delete')} ${path.join(this._destination, '.git')} folder...`))
            .then(() => file_system_utils_1.FileSystemUtils.rmdir(path.join(this._destination, '.git')))
            .then(() => this.logger.debug(`${color_service_1.ColorService.blue('delete')} success`))
            .then(() => this.logger.debug(`${color_service_1.ColorService.blue('delete')} ${path.join(this._destination, '.gitignore')} file...`))
            .then(() => file_system_utils_1.FileSystemUtils.rm(path.join(this._destination, '.gitignore')))
            .then(() => this.logger.debug(`${color_service_1.ColorService.blue('delete')} success`));
    }
}
exports.GitRepository = GitRepository;
