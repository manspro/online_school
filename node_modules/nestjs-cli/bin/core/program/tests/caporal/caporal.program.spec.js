"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const caporal_program_1 = require("../../caporal/caporal.program");
const sinon = require("sinon");
const caporal = require("caporal");
const chai_1 = require("chai");
describe('CaporalProgram', () => {
    let sandbox;
    beforeEach(() => {
        sandbox = sinon.sandbox.create();
    });
    afterEach(() => {
        sandbox.restore();
    });
    let program;
    beforeEach(() => {
        program = new caporal_program_1.CaporalProgram();
    });
    describe('#version()', () => {
        it('should call caporal.version()', () => {
            const versionStub = sandbox.stub(caporal, 'version');
            program.version('version');
            chai_1.expect(versionStub.calledWith('version')).to.be.true;
        });
    });
    describe('#help()', () => {
        it('should call caporal.help()', () => {
            const helpStub = sandbox.stub(caporal, 'help');
            program.help('content');
            chai_1.expect(helpStub.calledWith('content')).to.be.true;
        });
    });
    describe('#declare()', () => {
        it('should call the declaration handler', () => {
            const handlerStub = sandbox.stub();
            program.declare(handlerStub);
            chai_1.expect(handlerStub.called).to.be.true;
        });
    });
    describe('#command()', () => {
        it('should call caporal.command()', () => {
            const commandStub = sandbox.stub(caporal, 'command');
            program.command('name', 'description');
            chai_1.expect(commandStub.calledWith('name', 'description')).to.be.true;
        });
    });
    describe('#listen()', () => {
        it('should call caporal.parse()', () => {
            const parseStub = sandbox.stub(caporal, 'parse');
            program.listen();
            chai_1.expect(parseStub.calledWith(process.argv)).to.be.true;
        });
    });
});
