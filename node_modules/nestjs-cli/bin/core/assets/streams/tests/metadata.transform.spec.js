"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const metadata_transform_1 = require("../metadata.transform");
const asset_enum_1 = require("../../../../common/asset/enums/asset.enum");
const test_utils_1 = require("./test.utils");
const chai_1 = require("chai");
describe('MetadataTransform', () => {
    const className = 'AssetService';
    const dirName = './path/to/asset/asset.service';
    let reader;
    let writer;
    let transform;
    beforeEach(() => transform = new metadata_transform_1.MetadataTransform(className, asset_enum_1.AssetEnum.COMPONENT));
    context('no module metadata for asset type', () => {
        const content = 'import {Module} from \'@nestjs/common\';\n' +
            `import {${className}} from ${dirName};\n` +
            '\n' +
            '@Module({})\n' +
            'export class AssetModule {}\n';
        beforeEach(() => {
            reader = new test_utils_1.BufferedReadable(Buffer.from(content));
            writer = new test_utils_1.BufferedWritable();
        });
        it('should update the module metadata', done => {
            const newContent = 'import {Module} from \'@nestjs/common\';\n' +
                `import {${className}} from ${dirName};\n` +
                '\n' +
                '@Module({\n' +
                '  components: [\n' +
                '    AssetService\n' +
                '  ]\n' +
                '})\n' +
                'export class AssetModule {}\n';
            reader.on('end', () => {
                chai_1.expect(writer.getBuffer().toString()).to.be.equal(newContent);
                done();
            });
            reader.pipe(transform).pipe(writer);
        });
    });
    context('existing metadata for asset type', () => {
        const content = 'import {Module} from \'@nestjs/common\';\n' +
            `import {${className}} from ${dirName};\n` +
            '\n' +
            '@Module({\n' +
            '  components: [\n' +
            '    OtherAssetService\n' +
            '  ]\n' +
            '})\n' +
            'export class AssetModule {}\n';
        beforeEach(() => {
            reader = new test_utils_1.BufferedReadable(Buffer.from(content));
            writer = new test_utils_1.BufferedWritable();
        });
        it('should update the module metadata', done => {
            const newContent = 'import {Module} from \'@nestjs/common\';\n' +
                `import {${className}} from ${dirName};\n` +
                '\n' +
                '@Module({\n' +
                '  components: [\n' +
                '    OtherAssetService,\n' +
                '    AssetService\n' +
                '  ]\n' +
                '})\n' +
                'export class AssetModule {}\n';
            reader.on('end', () => {
                chai_1.expect(writer.getBuffer().toString()).to.be.equal(newContent);
                done();
            });
            reader.pipe(transform).pipe(writer);
        });
    });
});
