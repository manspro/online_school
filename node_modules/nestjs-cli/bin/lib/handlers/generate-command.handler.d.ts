import { CommandHandler } from '../../common/program/interfaces/command.handler.interface';
import { CommandArguments } from '../../common/program/interfaces/command.aguments.interface';
import { CommandOptions } from '../../common/program/interfaces/command.options.interface';
import { Logger } from '../../common/logger/interfaces/logger.interface';
export interface GenerateCommandArguments extends CommandArguments {
    asset: string;
    name: string;
}
export interface GenerateCommandOptions extends CommandOptions {
}
export declare class GenerateCommandHandler implements CommandHandler {
    execute(args: GenerateCommandArguments, options: GenerateCommandOptions, logger: Logger): Promise<void>;
}
